---
import Layout from '../../layouts/Layout.astro';
import { getCollection, type CollectionEntry } from 'astro:content';
import { createUrl } from '../../utils/url';

export async function getStaticPaths() {
  const lekcje = await getCollection('lekcje');
  return lekcje.map((lekcja) => ({
    params: { slug: lekcja.slug },
    props: lekcja,
  }));
}

type Props = CollectionEntry<'lekcje'>;

const lekcja = Astro.props as Props;
const { Content } = await lekcja.render();

// Pobierz wszystkie lekcje dla nawigacji
const allLekcje = await getCollection('lekcje', ({ data }) => {
  return data.published === true;
});
const sortedLekcje = allLekcje.sort((a, b) => a.data.order - b.data.order);

// Znajd≈∫ poprzedniƒÖ i nastƒôpnƒÖ lekcjƒô
const currentIndex = sortedLekcje.findIndex((l) => l.slug === lekcja.slug);
const previousLekcja = currentIndex > 0 ? sortedLekcje[currentIndex - 1] : null;
const nextLekcja = currentIndex < sortedLekcje.length - 1 ? sortedLekcje[currentIndex + 1] : null;
---

<Layout title={`${lekcja.data.title} - AI dla Zielonych`} description={lekcja.data.description}>
  <article class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-6 min-w-0">
    <!-- Breadcrumb -->
    <nav class="mb-8" aria-label="Breadcrumb">
      <ol class="flex flex-wrap items-center gap-1 text-sm text-gray-500">
        <li><a href={createUrl("/")} class="hover:text-emerald-600 whitespace-nowrap">Strona g≈Ç√≥wna</a></li>
        <li><span class="mx-1 text-gray-400">/</span></li>
        <li><a href={createUrl("/lekcje")} class="hover:text-emerald-600 whitespace-nowrap">Lekcje</a></li>
        <li><span class="mx-1 text-gray-400">/</span></li>
        <li class="text-gray-900 font-medium">{lekcja.data.title}</li>
      </ol>
    </nav>

    <!-- Header -->
    <header class="mb-8">
      <div class="flex items-start space-x-4 mb-4">
        <div class="w-10 h-10 min-w-[2.5rem] flex-shrink-0 bg-gradient-to-r from-emerald-500 to-teal-500 text-white rounded-full flex items-center justify-center font-bold">
          {lekcja.data.order}
        </div>
        <div class="flex-1">
          <h1 class="text-3xl md:text-4xl font-bold text-gray-900">
            {lekcja.data.title}
          </h1>
          <p class="text-gray-600 mt-1">{lekcja.data.description}</p>
        </div>
      </div>
      
      <div class="flex flex-wrap gap-3 items-center">
        {lekcja.data.duration && (
          <span class="bg-emerald-100 text-emerald-700 px-3 py-1 rounded-full text-sm font-medium">
            ‚è±Ô∏è {lekcja.data.duration}
          </span>
        )}
        {lekcja.data.tags && lekcja.data.tags.map((tag) => (
          <span class="bg-gray-100 text-gray-600 px-3 py-1 rounded-full text-sm">
            #{tag}
          </span>
        ))}
      </div>
    </header>

    <!-- Content -->
    <div class="bg-white rounded-lg shadow-lg border border-gray-200 p-4 sm:p-8 lg:p-12 mb-12">
      <div class="lesson-content max-w-none overflow-x-auto">
        <Content />
      </div>

      <!-- Navigation -->
      <div class="border-t border-gray-200 pt-8 mt-8">
        <nav aria-label="Nawigacja miƒôdzy lekcjami">
          <div class="grid grid-cols-1 sm:grid-cols-2 gap-4 sm:gap-6">
            {previousLekcja ? (
              <div class="flex flex-col">
                <p class="text-sm text-gray-500 mb-2">Poprzednia lekcja</p>
                <a 
                  href={createUrl(`/lekcje/${previousLekcja.slug}`)}
                  class="flex-1 bg-gray-50 border border-gray-200 rounded-lg p-4 hover:border-emerald-300 hover:shadow-md hover:bg-emerald-50 transition-all duration-200 group"
                >
                  <div class="flex items-center space-x-3 h-full">
                    <div class="w-8 h-8 min-w-[2rem] flex-shrink-0 bg-gray-200 group-hover:bg-emerald-100 text-gray-600 group-hover:text-emerald-600 rounded-full flex items-center justify-center font-bold text-sm transition-colors">
                      ‚Üê
                    </div>
                    <div class="min-w-0 flex-1">
                      <div class="font-semibold text-gray-900 group-hover:text-emerald-600 transition-colors">
                        {previousLekcja.data.title}
                      </div>
                      <div class="text-sm text-gray-500">
                        Lekcja {previousLekcja.data.order}
                      </div>
                    </div>
                  </div>
                </a>
              </div>
            ) : (
              <div class="hidden sm:block"></div>
            )}
            
            {nextLekcja && (
              <div class="flex flex-col">
                <p class="text-sm text-gray-500 mb-2 sm:text-right">Nastƒôpna lekcja</p>
                <a 
                  href={createUrl(`/lekcje/${nextLekcja.slug}`)}
                  class="flex-1 bg-gray-50 border border-gray-200 rounded-lg p-4 hover:border-emerald-300 hover:shadow-md hover:bg-emerald-50 transition-all duration-200 group"
                >
                  <div class="flex items-center space-x-3 sm:justify-end h-full">
                    <div class="min-w-0 flex-1 sm:text-right order-1 sm:order-none">
                      <div class="font-semibold text-gray-900 group-hover:text-emerald-600 transition-colors">
                        {nextLekcja.data.title}
                      </div>
                      <div class="text-sm text-gray-500">
                        Lekcja {nextLekcja.data.order}
                      </div>
                    </div>
                    <div class="w-8 h-8 min-w-[2rem] flex-shrink-0 bg-gray-200 group-hover:bg-emerald-100 text-gray-600 group-hover:text-emerald-600 rounded-full flex items-center justify-center font-bold text-sm transition-colors order-2 sm:order-none">
                      ‚Üí
                    </div>
                  </div>
                </a>
              </div>
            )}
          </div>
        </nav>
      </div>
    </div>

    <!-- Call to action -->
    {currentIndex === sortedLekcje.length - 1 && (
      <div class="bg-white rounded-lg shadow-lg border border-gray-200 p-8">
        <div class="bg-gradient-to-r from-emerald-500 to-teal-500 rounded-xl p-8 text-white text-center">
          <h2 class="text-2xl font-bold mb-4">üéâ Gratulacje!</h2>
          <p class="mb-6 opacity-90">
            Uko≈Ñczy≈Çe≈õ wszystkie lekcje! Teraz mo≈ºesz sprawdziƒá swojƒÖ wiedzƒô w te≈õcie ko≈Ñcowym i otrzymaƒá certyfikat.
          </p>
          <a 
            href={createUrl("/test")}
            class="bg-white text-emerald-600 px-8 py-3 rounded-lg font-semibold hover:bg-gray-50 transition-colors duration-200 inline-block"
            role="button"
            aria-label="Przejd≈∫ do testu ko≈Ñcowego"
          >
            üìù PrzystƒÖp do testu ko≈Ñcowego
          </a>
        </div>
      </div>
    )}
  </article>
</Layout>

<script>
  // Wrap tables in responsive containers for better mobile display
  document.addEventListener('DOMContentLoaded', function() {
    const tables = document.querySelectorAll('.lesson-content table');
    tables.forEach(table => {
      const parent = table.parentElement;
      if (parent && !parent.classList.contains('table-wrapper')) {
        const wrapper = document.createElement('div');
        wrapper.className = 'table-wrapper';
        const parentNode = table.parentNode;
        if (parentNode) {
          parentNode.insertBefore(wrapper, table);
          wrapper.appendChild(table);
        }
      }
    });
  });
</script>
