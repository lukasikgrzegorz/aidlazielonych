---
import Layout from '../layouts/Layout.astro';
import { createUrl } from '../utils/url';

// Wszystkie dostępne pytania (20)
const allQuestions = [
  {
    "id": 1,
    "question": "Czym jest sztuczna inteligencja (AI)?",
    "options": [
      "Tylko programy komputerowe do gier",
      "Technologia pozwalająca maszynom wykonywać zadania wymagające inteligencji podobnej do ludzkiej",
      "Wyłącznie roboty humanoidalne",
      "System do przechowywania danych"
    ],
    "correct": 1
  },
  {
    "id": 2,
    "question": "W którym roku po raz pierwszy użyto terminu 'artificial intelligence'?",
    "options": ["1950", "1956", "1960", "1943"],
    "correct": 1
  },
  {
    "id": 3,
    "question": "Który z poniższych NIE jest przykładem AI w codziennym życiu?",
    "options": [
      "Asystenci głosowi (Siri, Alexa)",
      "Systemy rekomendacji Netflix",
      "Nawigacja GPS",
      "Zwykły kalkulator"
    ],
    "correct": 3
  },
  {
    "id": 4,
    "question": "Co to jest Test Turinga?",
    "options": [
      "Test szybkości komputera",
      "Test sprawdzający, czy maszyna może 'myśleć' jak człowiek",
      "Test bezpieczeństwa systemów",
      "Test wydajności algorytmów"
    ],
    "correct": 1
  },
  {
    "id": 5,
    "question": "Co spowodowało 'zimy AI' w historii sztucznej inteligencji?",
    "options": [
      "Tylko wysokie koszty badań",
      "Brak zainteresowania naukowców",
      "Przeszacowane oczekiwania, ograniczona moc obliczeniowa i wysokie koszty",
      "Problemy z internetem"
    ],
    "correct": 2
  },
  {
    "id": 6,
    "question": "Który system AI pokonał mistrza świata w szachach w 1997 roku?",
    "options": ["AlphaGo", "Deep Blue", "Watson", "GPT-1"],
    "correct": 1
  },
  {
    "id": 7,
    "question": "Co zmieniło się między latami 70. a współczesnością, umożliwiając rozwój AI?",
    "options": [
      "Tylko lepsze komputery",
      "Eksplozja danych, większa moc obliczeniowa i nowe algorytmy",
      "Tylko więcej pieniędzy na badania",
      "Tylko internet"
    ],
    "correct": 1
  },
  {
    "id": 8,
    "question": "Który przełom w 2012 roku rozpoczął erę głębokiego uczenia?",
    "options": ["GPT-1", "AlexNet", "ELIZA", "Perceptron"],
    "correct": 1
  },
  {
    "id": 9,
    "question": "Co charakteryzuje współczesną rewolucję AI (od 2010 roku)?",
    "options": [
      "Tylko szybsze komputery",
      "Deep learning, transformery i modele językowe",
      "Tylko więcej danych",
      "Tylko lepsze algorytmy z lat 80."
    ],
    "correct": 1
  },
  {
    "id": 10,
    "question": "Która z poniższych lekcji płynie z historii AI?",
    "options": [
      "Postęp jest zawsze liniowy i przewidywalny",
      "AI nie potrzebuje współpracy naukowców",
      "Postęp nie jest liniowy i przełomy są często nieprzewidywalne",
      "Historia AI nie ma znaczenia dla przyszłości"
    ],
    "correct": 2
  },
  {
    "id": 11,
    "question": "Co to jest uczenie maszynowe (Machine Learning)?",
    "options": [
      "Programowanie tradycyjnych algorytmów",
      "Dziedzina AI, która pozwala komputerom uczyć się bez bezpośredniego programowania",
      "Tylko analiza danych statistycznych",
      "System zarządzania bazami danych"
    ],
    "correct": 1
  },
  {
    "id": 12,
    "question": "Które z poniższych to rodzaje uczenia maszynowego?",
    "options": [
      "Tylko uczenie nadzorowane",
      "Uczenie nadzorowane, nienadzorowane i ze wzmocnieniem",
      "Tylko uczenie głębokie",
      "Tylko sieci neuronowe"
    ],
    "correct": 1
  },
  {
    "id": 13,
    "question": "Co to jest sieć neuronowa?",
    "options": [
      "System do łączenia komputerów",
      "Model matematyczny inspirowany działaniem mózgu",
      "Typ bazy danych",
      "Protokół internetowy"
    ],
    "correct": 1
  },
  {
    "id": 14,
    "question": "Czym różni się AI wąska (Narrow AI) od AI ogólnej (AGI)?",
    "options": [
      "Nie ma różnicy",
      "AI wąska wykonuje konkretne zadania, AGI mogłaby wykonywać dowolne zadania intelektualne",
      "AI wąska jest szybsza",
      "AGI jest tańsza w produkcji"
    ],
    "correct": 1
  },
  {
    "id": 15,
    "question": "Co to są duże modele językowe (LLM)?",
    "options": [
      "Systemy do tłumaczenia języków",
      "Modele AI trenowane na ogromnych ilościach tekstu do rozumienia i generowania języka",
      "Słowniki cyfrowe",
      "Programy do korekty pisowni"
    ],
    "correct": 1
  },
  {
    "id": 16,
    "question": "Które z poniższych to przykłady zastosowań AI w medycynie?",
    "options": [
      "Tylko diagnoza obrazowa",
      "Diagnoza, odkrywanie leków, chirurgia robotyczna i analiza genetyczna",
      "Tylko prowadzenie dokumentacji",
      "Tylko kalkulatory medyczne"
    ],
    "correct": 1
  },
  {
    "id": 17,
    "question": "Co to jest 'hallucination' w kontekście AI?",
    "options": [
      "Problem z wyświetlaczem",
      "Gdy AI generuje nieprawdziwe lub wymyślone informacje",
      "Błąd w kodzie programu",
      "Problem z internetem"
    ],
    "correct": 1
  },
  {
    "id": 18,
    "question": "Jakie są główne wyzwania etyczne związane z AI?",
    "options": [
      "Tylko wysokie koszty",
      "Bias, prywatność, przejrzystość, wpływ na zatrudnienie i bezpieczeństwo",
      "Tylko szybkość działania",
      "Tylko kompatybilność z systemami"
    ],
    "correct": 1
  },
  {
    "id": 19,
    "question": "Co to jest 'prompt engineering'?",
    "options": [
      "Budowanie komputerów",
      "Sztuka tworzenia skutecznych instrukcji dla modeli AI",
      "Projektowanie stron internetowych",
      "Programowanie aplikacji mobilnych"
    ],
    "correct": 1
  },
  {
    "id": 20,
    "question": "Którą z poniższych technologii można wykorzystać do zrównoważonego rozwoju?",
    "options": [
      "Tylko panele słoneczne",
      "AI do optymalizacji energii, przewidywania pogody, zarządzania zasobami i monitorowania środowiska",
      "Tylko recykling",
      "Tylko transport publiczny"
    ],
    "correct": 1
  }
];

// Przekaż pytania do frontendu
const questionsJson = JSON.stringify(allQuestions);
---

<Layout title="Test końcowy - AI dla Zielonych" description="Sprawdź swoją wiedzę o sztucznej inteligencji i otrzymaj certyfikat ukończenia kursu.">
  <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
    <!-- Header -->
    <div class="text-center mb-12">
      <h1 class="text-4xl font-bold text-gray-900 mb-4">
        📝 Test końcowy
      </h1>
      <p class="text-xl text-gray-600 max-w-2xl mx-auto">
        Sprawdź swoją wiedzę z kursu "AI dla Zielonych". Aby otrzymać certyfikat, musisz uzyskać 100% poprawnych odpowiedzi.
      </p>
    </div>

    <!-- Test locked notification -->
    <div class="bg-amber-50 border border-amber-200 rounded-lg p-6 mb-8">
      <div class="flex items-start space-x-3">
        <span class="text-2xl">🔒</span>
        <div>
          <h2 class="font-semibold text-amber-800 mb-2">Test tymczasowo niedostępny</h2>
          <p class="text-amber-700 mb-4">
            Test końcowy zostanie odblokowany po pełnej publikacji wszystkich lekcji kursu. 
            Obecnie pracujemy nad finalizacją materiałów edukacyjnych.
          </p>
          <div class="text-amber-600 text-sm">
            <p class="font-medium mb-1">Co możesz robić w międzyczasie:</p>
            <ul class="space-y-1">
              <li>• Przejrzyj już dostępne lekcje</li>
              <li>• Powtórz materiał, który wydaje Ci się trudny</li>
              <li>• Śledź nasze aktualizacje</li>
            </ul>
          </div>
        </div>
      </div>
    </div>

    <!-- Info panel (hidden until test is unlocked) -->
    <div class="bg-blue-50 border border-blue-200 rounded-lg p-6 mb-8 opacity-50">
      <div class="flex items-start space-x-3">
        <span class="text-2xl">ℹ️</span>
        <div>
          <h2 class="font-semibold text-blue-800 mb-2">Informacje o teście (wkrótce dostępne)</h2>
          <ul class="text-blue-700 text-sm space-y-1">
            <li>• Test składa się z 10 pytań jednokrotnego wyboru</li>
            <li>• Do zaliczenia wymagane jest 100% poprawnych odpowiedzi</li>
            <li>• Możesz podejść do testu wielokrotnie</li>
            <li>• Wynik zostanie pokazany natychmiast po zakończeniu</li>
            <li>• Po zaliczeniu będziesz mógł pobrać certyfikat PDF</li>
          </ul>
        </div>
      </div>
    </div>

    <!-- Test container (disabled) -->
    <div id="test-container" class="bg-white rounded-lg shadow-lg border border-gray-200 p-8">
      <div class="text-center py-12">
        <div class="w-24 h-24 bg-gray-100 rounded-full mx-auto mb-6 flex items-center justify-center">
          <span class="text-4xl text-gray-400">🔒</span>
        </div>
        <h2 class="text-2xl font-bold text-gray-500 mb-4">Test zostanie wkrótce odblokowany</h2>
        <p class="text-gray-600 mb-8 max-w-md mx-auto">
          Pracujemy nad finalizacją wszystkich lekcji kursu. Test końcowy będzie dostępny po publikacji kompletnego materiału.
        </p>
        <a 
          href={createUrl("/lekcje")}
          class="inline-block bg-gradient-to-r from-emerald-600 to-teal-600 text-white px-8 py-4 rounded-lg font-semibold text-lg hover:from-emerald-700 hover:to-teal-700 transform hover:scale-105 transition-all duration-200 shadow-lg"
        >
          Przejdź do lekcji
        </a>
      </div>
    </div>
  </div>

  <script define:vars={{ questionsJson }}>
    // Test jest tymczasowo zablokowany
    console.log('Test końcowy zostanie odblokowany po pełnej publikacji kursu.');
    
    // Wyłączenie funkcjonalności testu
    document.addEventListener('DOMContentLoaded', () => {
      // Ukryj wszystkie interaktywne elementy testu
      const testContainer = document.getElementById('test-container');
      if (testContainer) {
        // Usuń wszystkie event listenery i funkcjonalność
        const buttons = testContainer.querySelectorAll('button');
        buttons.forEach(btn => {
          btn.disabled = true;
          btn.style.pointerEvents = 'none';
        });
        
        const inputs = testContainer.querySelectorAll('input');
        inputs.forEach(input => {
          input.disabled = true;
          input.style.pointerEvents = 'none';
        });
      }
    });
    
    // Oryginalny kod testu (wyłączony)
    /*
    // Pytania przekazane z serwera
    const allQuestions = JSON.parse(questionsJson);
    
    // Funkcja do tasowania tablicy (Fisher-Yates shuffle)
    function shuffleArray(array) {
      const shuffled = [...array];
      for (let i = shuffled.length - 1; i > 0; i--) {
        const j = Math.floor(Math.random() * (i + 1));
        [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];
      }
      return shuffled;
    }
    
    // Funkcja do losowania 10 pytań z 20 dostępnych
    function selectRandomQuestions() {
      const shuffledQuestions = shuffleArray(allQuestions);
      return shuffledQuestions.slice(0, 10);
    }
    
    let currentQuestions = [];
    let currentAnswers = {};
    
    function initializeTest() {
      const container = document.getElementById('questions-container');
      const submitBtn = document.getElementById('submit-test');
      
      if (!container || !submitBtn) return;
      
      // Wybierz losowe 10 pytań z dostępnych
      currentQuestions = selectRandomQuestions();
      renderQuestions();
    }
    
    function renderQuestions() {
      const container = document.getElementById('questions-container');
      const submitBtn = document.getElementById('submit-test');
      
      if (!container || !submitBtn) return;
      
      container.innerHTML = '';
      currentAnswers = {};
      
      currentQuestions.forEach((q, index) => {
        const questionDiv = document.createElement('div');
        questionDiv.className = 'mb-8 p-6 border border-gray-200 rounded-lg';
        
        questionDiv.innerHTML = `
          <h3 class="text-lg font-semibold text-gray-900 mb-4">
            ${index + 1}. ${q.question}
          </h3>
          <div class="space-y-3">
            ${q.options.map((option, optIndex) => `
              <label class="flex items-center space-x-3 p-3 rounded-lg hover:bg-gray-50 cursor-pointer transition-colors">
                <input 
                  type="radio" 
                  name="question-${index}" 
                  value="${optIndex}"
                  class="w-4 h-4 text-emerald-600 focus:ring-emerald-500 border-gray-300"
                >
                <span class="text-gray-700">${option}</span>
              </label>
            `).join('')}
          </div>
        `;
        
        container.appendChild(questionDiv);
      });
      
      // Nasłuchuj zmian w odpowiedziach
      container.addEventListener('change', (e) => {
        const target = e.target;
        if (target && target.type === 'radio') {
          const questionIndex = parseInt(target.name.split('-')[1]);
          currentAnswers[questionIndex] = parseInt(target.value);
          
          // Sprawdź czy wszystkie pytania zostały odpowiedziane
          if (Object.keys(currentAnswers).length === currentQuestions.length) {
            submitBtn.disabled = false;
          }
        }
      });
      
      submitBtn.disabled = true;
    }
    
    function showResults() {
      let correctCount = 0;
      
      currentQuestions.forEach((q, index) => {
        if (currentAnswers[index] === q.correct) {
          correctCount++;
        }
      });
      
      const percentage = Math.round((correctCount / currentQuestions.length) * 100);
      
      const testForm = document.getElementById('test-form');
      const testResults = document.getElementById('test-results');
      
      if (!testForm || !testResults) return;
      
      testForm.classList.add('hidden');
      testResults.classList.remove('hidden');
      
      const successResult = document.getElementById('success-result');
      const failResult = document.getElementById('fail-result');
      
      if (!successResult || !failResult) return;
      
      if (percentage === 100) {
        successResult.classList.remove('hidden');
        failResult.classList.add('hidden');
      } else {
        successResult.classList.add('hidden');
        failResult.classList.remove('hidden');
        const scoreElement = document.getElementById('score-percentage');
        if (scoreElement) {
          scoreElement.textContent = `${percentage}%`;
        }
      }
    }
    
    function resetTest() {
      const testForm = document.getElementById('test-form');
      const testResults = document.getElementById('test-results');
      const certificateName = document.getElementById('certificate-name');
      
      if (!testForm || !testResults) return;
      
      testForm.classList.remove('hidden');
      testResults.classList.add('hidden');
      
      if (certificateName) {
        certificateName.value = '';
      }
      
      initializeTest();
    }
    
    function generateCertificate() {
      const nameInput = document.getElementById('certificate-name');
      
      if (!nameInput) return;
      
      const name = nameInput.value.trim();
      
      if (!name) {
        alert('Proszę wprowadzić imię i nazwisko');
        return;
      }
      
      // Generowanie certyfikatu jako obraz Canvas
      const canvas = document.createElement('canvas');
      const ctx = canvas.getContext('2d');
      
      if (!ctx) return;
      
      canvas.width = 1200;
      canvas.height = 800;
      
      // Gradient tło
      const gradient = ctx.createLinearGradient(0, 0, 1200, 800);
      gradient.addColorStop(0, '#f0fdf4');
      gradient.addColorStop(1, '#ecfdf5');
      ctx.fillStyle = gradient;
      ctx.fillRect(0, 0, 1200, 800);
      
      // Ramka
      ctx.strokeStyle = '#059669';
      ctx.lineWidth = 8;
      ctx.strokeRect(40, 40, 1120, 720);
      
      // Wewnętrzna ramka
      ctx.strokeStyle = '#34d399';
      ctx.lineWidth = 2;
      ctx.strokeRect(60, 60, 1080, 680);
      
      // Nagłówek
      ctx.fillStyle = '#065f46';
      ctx.font = 'bold 48px Arial';
      ctx.textAlign = 'center';
      ctx.fillText('🏆 CERTYFIKAT UKOŃCZENIA', 600, 150);
      
      // Nazwa kursu
      ctx.fillStyle = '#059669';
      ctx.font = 'bold 36px Arial';
      ctx.fillText('AI DLA ZIELONYCH', 600, 220);
      
      // Potwierdzenie
      ctx.fillStyle = '#374151';
      ctx.font = '24px Arial';
      ctx.fillText('Niniejszym poświadcza się, że', 600, 300);
      
      // Imię i nazwisko
      ctx.fillStyle = '#059669';
      ctx.font = 'bold 42px Arial';
      ctx.fillText(name.toUpperCase(), 600, 380);
      
      // Opis
      ctx.fillStyle = '#374151';
      ctx.font = '20px Arial';
      ctx.fillText('pomyślnie ukończył/ukończyła kurs podstaw sztucznej inteligencji', 600, 450);
      ctx.fillText('uzyskując 100% poprawnych odpowiedzi w teście końcowym', 600, 480);
      
      // Data
      const currentDate = new Date().toLocaleDateString('pl-PL', {
        year: 'numeric',
        month: 'long',
        day: 'numeric'
      });
      ctx.fillStyle = '#6b7280';
      ctx.font = '18px Arial';
      ctx.fillText(`${currentDate}`, 600, 580);
      
      // Podpis
      ctx.fillStyle = '#059669';
      ctx.font = 'italic 16px Arial';
      ctx.fillText('AI dla Zielonych - Kurs podstaw sztucznej inteligencji', 600, 650);
      
      // Unikalne ID certyfikatu
      const certificateId = 'AZ-' + Date.now().toString(36).toUpperCase();
      ctx.fillStyle = '#9ca3af';
      ctx.font = '12px Arial';
      ctx.textAlign = 'right';
      ctx.fillText(`ID certyfikatu: ${certificateId}`, 1140, 740);
      
      // Pobieranie certyfikatu
      const link = document.createElement('a');
      link.download = `certyfikat-ai-dla-zielonych-${name.replace(/\s+/g, '-').toLowerCase()}.png`;
      link.href = canvas.toDataURL('image/png', 1.0);
      
      // Dodaj feedback dla użytkownika
      const generateBtn = document.getElementById('generate-certificate');
      if (generateBtn) {
        generateBtn.textContent = '⏳ Generowanie...';
        generateBtn.classList.add('opacity-50', 'cursor-not-allowed');
      }
      
      // Symulacja krótkiego opóźnienia dla lepszego UX
      setTimeout(() => {
        link.click();
        
        if (generateBtn) {
          generateBtn.textContent = '✅ Certyfikat pobrany!';
          setTimeout(() => {
            generateBtn.textContent = '🏆 Wygeneruj certyfikat PDF';
            generateBtn.classList.remove('opacity-50', 'cursor-not-allowed');
          }, 2000);
        }
      }, 500);
    }
    
    // Event listeners
    document.addEventListener('DOMContentLoaded', () => {
      initializeTest();
      
      const submitBtn = document.getElementById('submit-test');
      const retakeBtn = document.getElementById('retake-test');
      const retakeFailBtn = document.getElementById('retake-test-fail');
      const generateBtn = document.getElementById('generate-certificate');
      
      if (submitBtn) {
        submitBtn.addEventListener('click', showResults);
      }
      if (retakeBtn) {
        retakeBtn.addEventListener('click', resetTest);
      }
      if (retakeFailBtn) {
        retakeFailBtn.addEventListener('click', resetTest);
      }
      if (generateBtn) {
        generateBtn.addEventListener('click', generateCertificate);
      }
    });
    */
  </script>
</Layout>
